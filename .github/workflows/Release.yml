name: Release

permissions:
  contents: write


# jobs:
#   create-release:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - uses: taiki-e/create-gh-release-action@v1
#         with:
#           # (required) GitHub token for creating GitHub Releases.
#           token: ${{ secrets.GITHUB_TOKEN }}

#   upload-assets:
#     needs: create-release
#     strategy:
#       matrix:
#         os:
#           - ubuntu-latest
#           - macos-latest
#           - windows-latest
#     runs-on: ${{ matrix.os }}
#     steps:
#       - uses: actions/checkout@v4
#       - uses: taiki-e/upload-rust-binary-action@v1
#         with:
#           # (required) Comma-separated list of binary names (non-extension portion of filename) to build and upload.
#           # Note that glob pattern is not supported yet.
#           bin: scaffold,watcher,tex_gen
#           archive: app-$target
#           # (optional) On which platform to distribute the `.tar.gz` file.
#           # [default value: unix]
#           # [possible values: all, unix, windows, none]
#           tar: unix
#           # (optional) On which platform to distribute the `.zip` file.
#           # [default value: windows]
#           # [possible values: all, unix, windows, none]
#           zip: windows
#           # (required) GitHub token for uploading assets to GitHub Releases.
#           token: ${{ secrets.GITHUB_TOKEN }}
#           asset: COPYING,Readme.md,Blender/blender_3dmigoto_plugin.py


on:
  release:
    types: [created]

jobs:
  windows-release:
    name: release windows
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@master
      - name: Compile
        uses: rust-build/rust-build.action@v1.4.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SRC_DIR: GBT
        with:
          RUSTTARGET: x86_64-pc-windows-gnu
          UPLOAD_MODE: release
          EXTRA_FILES: "COPYING Readme.md Blender/blender_3dmigoto_plugin.py"

  non-windows-release:          
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            package: [GBT]
            archive: tar.gz tar.xz tar.zst
          - target: x86_64-apple-darwin
            archive: zip
    steps:
    - uses: actions/checkout@master
    - name: Compile and release
      uses: rust-build/rust-build.action@v1.4.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SRC_DIR: ${{ matrix.package }}
      with:
        RUSTTARGET: ${{ matrix.target }}
        ARCHIVE_TYPES: ${{ matrix.archive }}
      